1109,1110c1109,1111
<     List<Stage> stages = new ArrayList<>();
<     stages.add(
---
>     List<Stage> firstStageInProgressPerRequest = new ArrayList<>();
> 
>     firstStageInProgressPerRequest.add(
1114c1115,1117
<     stages.add( 
---
> 
>     
>     firstStageInProgressPerRequest.add(
1119c1122
<     stages.add(
---
>     firstStageInProgressPerRequest.add(
1124c1127
<     stages.add(
---
>     firstStageInProgressPerRequest.add(
1129,1133d1131
<     stages.add( 
<         getStageWithSingleTask(
<             hostname4, "cluster1", Role.GANGLIA_MONITOR,
<             RoleCommand.START, Service.Type.GANGLIA, 5, 5, 4));
< 
1137a1136,1141
>     List<String> blockingHostsRequest1 = new ArrayList<>();
>     when(hostRoleCommandDAOMock.getBlockingHostsForRequest(1, 1)).thenReturn(blockingHostsRequest1);
> 
>     List<String> blockingHostsRequest2 = Lists.newArrayList(hostname1);
>     when(hostRoleCommandDAOMock.getBlockingHostsForRequest(1, 2)).thenReturn(blockingHostsRequest2);
> 
1142,1143c1146,1147
<     when(db.getCommandsInProgressCount()).thenReturn(stages.size());
<     when(db.getFirstStageInProgressPerRequest()).thenReturn(stages);
---
>     when(db.getCommandsInProgressCount()).thenReturn(firstStageInProgressPerRequest.size());
>     when(db.getFirstStageInProgressPerRequest()).thenReturn(firstStageInProgressPerRequest);
1155,1159c1159,1162
<     Assert.assertEquals(HostRoleStatus.QUEUED, stages.get(0).getHostRoleStatus(hostname1, "DATANODE"));
<     Assert.assertEquals(HostRoleStatus.PENDING, stages.get(1).getHostRoleStatus(hostname1, "GANGLIA_MONITOR"));
<     Assert.assertEquals(HostRoleStatus.QUEUED, stages.get(2).getHostRoleStatus(hostname2, "DATANODE"));
<     Assert.assertEquals(HostRoleStatus.QUEUED, stages.get(3).getHostRoleStatus(hostname3, "DATANODE"));
<     Assert.assertEquals(HostRoleStatus.PENDING, stages.get(4).getHostRoleStatus(hostname4, "GANGLIA_MONITOR"));
---
>     Assert.assertEquals(HostRoleStatus.QUEUED, firstStageInProgressPerRequest.get(0).getHostRoleStatus(hostname1, "DATANODE"));
>     Assert.assertEquals(HostRoleStatus.PENDING, firstStageInProgressPerRequest.get(1).getHostRoleStatus(hostname1, "GANGLIA_MONITOR"));
>     Assert.assertEquals(HostRoleStatus.QUEUED, firstStageInProgressPerRequest.get(2).getHostRoleStatus(hostname2, "DATANODE"));
>     Assert.assertEquals(HostRoleStatus.QUEUED, firstStageInProgressPerRequest.get(3).getHostRoleStatus(hostname3, "DATANODE"));
2067a2071,2072
>     HostRoleCommandDAO hostRoleCommandDAO = mock(HostRoleCommandDAO.class);
> 
2103c2108
<         (HostRoleCommandDAO)null, (HostRoleCommandFactory)null);
---
>         hostRoleCommandDAO, (HostRoleCommandFactory) null);
