61d60
< import org.apache.ambari.server.orm.dao.ClusterDAO;
65d63
< import org.apache.ambari.server.orm.dao.StackDAO;
81a80
> import org.apache.commons.lang.StringUtils;
96,102c95,102
<   protected static final String CLUSTER_STACK_VERSION_ID_PROPERTY_ID                   = PropertyHelper.getPropertyId("ClusterStackVersions", "id");
<   protected static final String CLUSTER_STACK_VERSION_CLUSTER_NAME_PROPERTY_ID         = PropertyHelper.getPropertyId("ClusterStackVersions", "cluster_name");
<   protected static final String CLUSTER_STACK_VERSION_STACK_PROPERTY_ID                = PropertyHelper.getPropertyId("ClusterStackVersions", "stack");
<   protected static final String CLUSTER_STACK_VERSION_VERSION_PROPERTY_ID              = PropertyHelper.getPropertyId("ClusterStackVersions", "version");
<   protected static final String CLUSTER_STACK_VERSION_STATE_PROPERTY_ID                = PropertyHelper.getPropertyId("ClusterStackVersions", "state");
<   protected static final String CLUSTER_STACK_VERSION_HOST_STATES_PROPERTY_ID          = PropertyHelper.getPropertyId("ClusterStackVersions", "host_states");
<   protected static final String CLUSTER_STACK_VERSION_REPOSITORY_VERSION_PROPERTY_ID   = PropertyHelper.getPropertyId("ClusterStackVersions", "repository_version");
---
>   protected static final String CLUSTER_STACK_VERSION_ID_PROPERTY_ID = PropertyHelper.getPropertyId("ClusterStackVersions", "id");
>   protected static final String CLUSTER_STACK_VERSION_CLUSTER_NAME_PROPERTY_ID = PropertyHelper.getPropertyId("ClusterStackVersions", "cluster_name");
>   protected static final String CLUSTER_STACK_VERSION_STACK_PROPERTY_ID = PropertyHelper.getPropertyId("ClusterStackVersions", "stack");
>   protected static final String CLUSTER_STACK_VERSION_VERSION_PROPERTY_ID = PropertyHelper.getPropertyId("ClusterStackVersions", "version");
>   protected static final String CLUSTER_STACK_VERSION_STATE_PROPERTY_ID = PropertyHelper.getPropertyId("ClusterStackVersions", "state");
>   protected static final String CLUSTER_STACK_VERSION_HOST_STATES_PROPERTY_ID = PropertyHelper.getPropertyId("ClusterStackVersions", "host_states");
>   protected static final String CLUSTER_STACK_VERSION_REPOSITORY_VERSION_PROPERTY_ID  = PropertyHelper.getPropertyId("ClusterStackVersions", "repository_version");
>   protected static final String CLUSTER_STACK_VERSION_STAGE_SUCCESS_FACTOR  = PropertyHelper.getPropertyId("ClusterStackVersions", "success_factor");
106a107,118
>   
> 
> 
> 
> 
> 
> 
> 
> 
> 
>   private static final float INSTALL_PACKAGES_SUCCESS_FACTOR = 0.85f;
> 
128a141
>       add(CLUSTER_STACK_VERSION_STAGE_SUCCESS_FACTOR);
150,152d162
<   private static StackDAO stackDAO;
< 
<   @Inject
167,169d176
<   private static ClusterDAO clusterDAO;
< 
<   @Inject
274a282
> 
277,282c285,289
<     Set<String> requiredProperties = new HashSet<String>(){{
<       add(CLUSTER_STACK_VERSION_CLUSTER_NAME_PROPERTY_ID);
<       add(CLUSTER_STACK_VERSION_REPOSITORY_VERSION_PROPERTY_ID);
<       add(CLUSTER_STACK_VERSION_STACK_PROPERTY_ID);
<       add(CLUSTER_STACK_VERSION_VERSION_PROPERTY_ID);
<     }};
---
>     Set<String> requiredProperties = new HashSet<String>();
>     requiredProperties.add(CLUSTER_STACK_VERSION_CLUSTER_NAME_PROPERTY_ID);
>     requiredProperties.add(CLUSTER_STACK_VERSION_REPOSITORY_VERSION_PROPERTY_ID);
>     requiredProperties.add(CLUSTER_STACK_VERSION_STACK_PROPERTY_ID);
>     requiredProperties.add(CLUSTER_STACK_VERSION_VERSION_PROPERTY_ID);
321a329,335
>     
>     Float successFactor = INSTALL_PACKAGES_SUCCESS_FACTOR;
>     String successFactorProperty = (String) propertyMap.get(CLUSTER_STACK_VERSION_STAGE_SUCCESS_FACTOR);
>     if (StringUtils.isNotBlank(successFactorProperty)) {
>       successFactor = Float.valueOf(successFactorProperty);
>     }
> 
323a338
> 
328a344
> 
354c370
<     for (int batchId = 1; batchId <= batchCount ; batchId++) {
---
>     for (int batchId = 1; batchId <= batchCount; batchId++) {
360,361c376,377
<         stageName = String.format(INSTALL_PACKAGES_FULL_NAME +
<                 ". Batch %d of %d", batchId, batchCount);
---
>         stageName = String.format(INSTALL_PACKAGES_FULL_NAME + ". Batch %d of %d", batchId,
>             batchCount);
363,371c379,389
<       Stage stage = stageFactory.createNew(req.getId(),
<               "/tmp/ambari",
<               cluster.getClusterName(),
<               cluster.getClusterId(),
<               stageName,
<               "{}",
<               "{}",
<               hostParamsJson
<       );
---
> 
>       Stage stage = stageFactory.createNew(req.getId(), "/tmp/ambari", cluster.getClusterName(),
>           cluster.getClusterId(), stageName, "{}", "{}", hostParamsJson);
> 
>       
>       
>       
>       
>       stage.getSuccessFactors().put(Role.INSTALL_PACKAGES, successFactor);
> 
>       
373d390
<       stages.add(stage);
374a392,395
> 
>       
>       stages.add(stage);
> 
391a413
> 
470,475c492,496
<     Map<String, String> params = new HashMap<String, String>() {{
<       put("stack_id", stackId.getStackId());
<       put("repository_version", desiredRepoVersion);
<       put("base_urls", repoList);
<       put("package_list", packageList);
<     }};
---
>     Map<String, String> params = new HashMap<String, String>();
>     params.put("stack_id", stackId.getStackId());
>     params.put("repository_version", desiredRepoVersion);
>     params.put("base_urls", repoList);
>     params.put("package_list", packageList);
574,578c595,598
<       Set<String> requiredProperties = new HashSet<String>() {{
<         add(CLUSTER_STACK_VERSION_CLUSTER_NAME_PROPERTY_ID);
<         add(CLUSTER_STACK_VERSION_REPOSITORY_VERSION_PROPERTY_ID);
<         add(CLUSTER_STACK_VERSION_STATE_PROPERTY_ID);
<       }};
---
>       Set<String> requiredProperties = new HashSet<String>();
>       requiredProperties.add(CLUSTER_STACK_VERSION_CLUSTER_NAME_PROPERTY_ID);
>       requiredProperties.add(CLUSTER_STACK_VERSION_REPOSITORY_VERSION_PROPERTY_ID);
>       requiredProperties.add(CLUSTER_STACK_VERSION_STATE_PROPERTY_ID);
637c657
<       
---
> 
