132a133,134
> 
> 
162a165
>       populateLdapConfiguration(root);
173a177,222
>   
> 
> 
> 
> 
> 
>   protected void populateLdapConfiguration(ObjectNode root) throws StackAdvisorException, IOException {
>     Response response = handleRequest(null, null, new LocalUriInfo(GET_LDAP_CONFIG_URI), Request.Type.GET,
>         createConfigResource());
> 
>     if (response.getStatus() != Status.OK.getStatusCode()) {
>       String message = String.format(
>           "Error occured during retrieving ldap configuration, status=%s, response=%s",
>           response.getStatus(), (String) response.getEntity());
>       LOG.warn(message);
>       throw new StackAdvisorException(message);
>     }
> 
>     String ldapConfigJSON = (String) response.getEntity();
>     if (LOG.isDebugEnabled()) {
>       LOG.debug("LDAP configuration: {}", ldapConfigJSON);
>     }
> 
>     JsonNode ldapConfigRoot = mapper.readTree(ldapConfigJSON);
>     ArrayNode ldapConfigs = ((ArrayNode)ldapConfigRoot.get("items"));
>     int numConfigs = ldapConfigs.size();
>     
>     switch (numConfigs) {
>       case 0:
>         LOG.debug("No LDAP config is stored in the DB");
>         break;
>       case 1:
>         ArrayNode ldapConfigData = (ArrayNode)ldapConfigs.get(0).get("AmbariConfiguration").get("data");
>         if (ldapConfigData.size() == 0) {
>           throw new StackAdvisorException("No configuration data for LDAP configuration.");
>         }
>         if (ldapConfigData.size() > 1) {
>           throw new StackAdvisorException("Ambigous configuration data for LDAP configuration.");
>         }
>         root.put(LDAP_CONFIGURATION_PROPERTY, ldapConfigData.get(0));
>         break;
>       default:
>         throw new StackAdvisorException(String.format("Multiple (%s) LDAP configs are found in the DB.", numConfigs));
>     }
>   }
> 
439a489,493
>   protected ResourceInstance createConfigResource() {
>     return createResource(Resource.Type.AmbariConfiguration, new HashMap<>());
>   }
> 
> 
