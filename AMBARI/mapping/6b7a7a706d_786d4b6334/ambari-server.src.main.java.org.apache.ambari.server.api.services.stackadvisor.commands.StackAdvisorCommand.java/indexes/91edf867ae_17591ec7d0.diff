47a48,49
> import org.apache.ambari.server.controller.RootComponent;
> import org.apache.ambari.server.controller.RootService;
134a137,138
> 
> 
183,184c187,189
<   protected void populateLdapConfiguration(ObjectNode root) throws StackAdvisorException, IOException {
<     Response response = handleRequest(null, null, new LocalUriInfo(GET_LDAP_CONFIG_URI), Request.Type.GET,
---
> 
>    void populateLdapConfiguration(ObjectNode root) throws StackAdvisorException, IOException {
>     Response response = handleRequest(null, null, new LocalUriInfo(GET_AMBARI_LDAP_CONFIG_URI), Request.Type.GET,
189c194
<           "Error occured during retrieving ldap configuration, status=%s, response=%s",
---
>           "Error occurred during retrieving ldap configuration, status=%s, response=%s",
201c206
<     ArrayNode ldapConfigs = ((ArrayNode)ldapConfigRoot.get("items"));
---
>     ArrayNode ldapConfigs = ((ArrayNode) ldapConfigRoot.get("items"));
203,219c208,227
<     
<     switch (numConfigs) {
<       case 0:
<         LOG.debug("No LDAP config is stored in the DB");
<         break;
<       case 1:
<         ArrayNode ldapConfigData = (ArrayNode)ldapConfigs.get(0).get("AmbariConfiguration").get("data");
<         if (ldapConfigData.size() == 0) {
<           throw new StackAdvisorException("No configuration data for LDAP configuration.");
<         }
<         if (ldapConfigData.size() > 1) {
<           throw new StackAdvisorException("Ambigous configuration data for LDAP configuration.");
<         }
<         root.put(LDAP_CONFIGURATION_PROPERTY, ldapConfigData.get(0));
<         break;
<       default:
<         throw new StackAdvisorException(String.format("Multiple (%s) LDAP configs are found in the DB.", numConfigs));
---
> 
>     if (numConfigs == 1) {
>       JsonNode ldapConfigItem = ldapConfigs.get(0);
>       if (ldapConfigItem == null) {
>         throw new StackAdvisorException("Unexpected JSON document encountered: missing data");
>       }
> 
>       JsonNode ldapConfiguration = ldapConfigItem.get("Configuration");
>       if (ldapConfiguration == null) {
>         throw new StackAdvisorException("Unexpected JSON document encountered: missing the Configuration object");
>       }
> 
>       JsonNode ldapConfigurationProperties = ldapConfiguration.get("properties");
>       if (ldapConfigurationProperties == null) {
>         throw new StackAdvisorException("Unexpected JSON document encountered: missing the Configuration/properties object");
>       }
> 
>       root.put(LDAP_CONFIGURATION_PROPERTY, ldapConfigurationProperties);
>     } else if (numConfigs > 1) {
>       throw new StackAdvisorException(String.format("Multiple (%s) LDAP configs are found in the DB.", numConfigs));
489,490c497,502
<   protected ResourceInstance createConfigResource() {
<     return createResource(Resource.Type.AmbariConfiguration, new HashMap<>());
---
>   private ResourceInstance createConfigResource() {
>     Map<Resource.Type, String> mapIds = new HashMap<>();
>     mapIds.put(Resource.Type.RootService, RootService.AMBARI.name());
>     mapIds.put(Resource.Type.RootServiceComponent, RootComponent.AMBARI_SERVER.name());
> 
>     return createResource(Resource.Type.RootServiceComponentConfiguration, mapIds);
