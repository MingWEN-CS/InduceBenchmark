272,274c272,273
<     for (int sliceNum = 0; sliceNum < timeSlices.size(); sliceNum++) {
<       Long[] timeSlice = timeSlices.get(sliceNum);
< 
---
>     List<Long> requiredTimestamps = new ArrayList<>();
>     for (Long[] timeSlice : timeSlices) {
276,284c275,277
<         LOG.debug("Found an empty slice : " + new Date(timeSlice[0]) + ", " + new Date(timeSlice[1]));
< 
<         Double lastSeenValue = null;
<         int index = sliceNum - 1;
<         Long[] prevTimeSlice = null;
<         while (lastSeenValue == null && index >= 0) {
<           prevTimeSlice = timeSlices.get(index--);
<           lastSeenValue = timeSliceValueMap.get(prevTimeSlice[1]);
<         }
---
>         requiredTimestamps.add(timeSlice[1]);
>       }
>     }
286,292c279
<         Double nextSeenValue = null;
<         index = sliceNum + 1;
<         Long[] nextTimeSlice = null;
<         while ( nextSeenValue == null && index < timeSlices.size()) {
<           nextTimeSlice = timeSlices.get(index++);
<           nextSeenValue = timeSliceValueMap.get(nextTimeSlice[1]);
<         }
---
>     Map<Long, Double> interpolatedValuesMap = PostProcessingUtil.interpolate(timelineMetric.getMetricValues(), requiredTimestamps);
294,296c281,283
<         Double interpolatedValue = PostProcessingUtil.interpolate(timeSlice[1],
<           (prevTimeSlice != null ? prevTimeSlice[1] : null), lastSeenValue,
<           (nextTimeSlice != null ? nextTimeSlice[1] : null), nextSeenValue);
---
>     if (interpolatedValuesMap != null) {
>       for (Map.Entry<Long, Double> entry : interpolatedValuesMap.entrySet()) {
>         Double interpolatedValue = entry.getValue();
303c290
<             timeSlice[1],
---
>             entry.getKey(),
306d292
<           LOG.debug("Interpolated value : " + interpolatedValue);
311d296
< 
