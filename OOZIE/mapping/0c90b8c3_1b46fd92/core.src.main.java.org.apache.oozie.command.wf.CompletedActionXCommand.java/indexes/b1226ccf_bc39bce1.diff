30a31
> import org.apache.oozie.service.CallbackService;
41a43
>     private int earlyRequeueCount;
43c45,46
<     public CompletedActionXCommand(String actionId, String externalStatus, Properties actionData, int priority) {
---
>     public CompletedActionXCommand(String actionId, String externalStatus, Properties actionData, int priority,
>                                    int earlyRequeueCount) {
46a50,54
>         this.earlyRequeueCount = earlyRequeueCount;
>     }
> 
>     public CompletedActionXCommand(String actionId, String externalStatus, Properties actionData, int priority) {
>         this(actionId, externalStatus, actionData, 1, 0);
82c90,91
<         if (this.wfactionBean.getStatus() != WorkflowActionBean.Status.RUNNING) {
---
>         if (this.wfactionBean.getStatus() != WorkflowActionBean.Status.RUNNING
>                 && this.wfactionBean.getStatus() != WorkflowActionBean.Status.PREP) {
94d102
<         ActionExecutor executor = Services.get().get(ActionService.class).getExecutor(this.wfactionBean.getType());
97,98c105,122
<         if (executor.isCompleted(externalStatus)) {
<             queue(new ActionCheckXCommand(this.wfactionBean.getId(), getPriority(), -1));
---
>         if (this.wfactionBean.getStatus() == WorkflowActionBean.Status.PREP) {
>             int maxEarlyRequeueCount = Services.get().get(CallbackService.class).getEarlyRequeueMaxRetries();
>             if (this.earlyRequeueCount < maxEarlyRequeueCount) {
>                 long delay = getRequeueDelay();
>                 LOG.warn("Received early callback for action still in PREP state; will wait [{0}]ms and requeue up to [{1}] more"
>                         + " times", delay, (maxEarlyRequeueCount - earlyRequeueCount));
>                 queue(new CompletedActionXCommand(this.actionId, this.externalStatus, null, this.getPriority(),
>                         this.earlyRequeueCount + 1), delay);
>             } else {
>                 throw new CommandException(ErrorCode.E0822, actionId);
>             }
>         } else {    
>             ActionExecutor executor = Services.get().get(ActionService.class).getExecutor(this.wfactionBean.getType());
>             
>             
>             if (executor.isCompleted(externalStatus)) {
>                 queue(new ActionCheckXCommand(this.wfactionBean.getId(), getPriority(), -1));
>             }
