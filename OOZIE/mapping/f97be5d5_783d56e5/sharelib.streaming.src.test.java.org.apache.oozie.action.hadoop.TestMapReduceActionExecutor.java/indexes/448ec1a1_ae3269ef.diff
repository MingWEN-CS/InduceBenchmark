51a52
> import java.util.Arrays;
78,106c79,80
<     public void testSetupMethodsWithLauncherJar() throws Exception {
<         String defaultVal = Services.get().getConf().get("oozie.action.ship.launcher.jar");
<         try {
<             Services.get().getConf().set("oozie.action.ship.launcher.jar", "true");
<             _testSetupMethods(true);
<         }
<         finally {
<             
<             if (defaultVal != null) {
<                 Services.get().getConf().set("oozie.action.ship.launcher.jar", defaultVal);
<             }
<         }
<      }
< 
<     public void testSetupMethodsWithoutLauncherJar() throws Exception {
<         String defaultVal = Services.get().getConf().get("oozie.action.ship.launcher.jar");
<         try {
<             Services.get().getConf().set("oozie.action.ship.launcher.jar", "false");
<             _testSetupMethods(false);
<         }
<         finally {
<             
<             if (defaultVal != null) {
<                 Services.get().getConf().set("oozie.action.ship.launcher.jar", defaultVal);
<             }
<         }
<     }
< 
<     public void _testSetupMethods(boolean launcherJarShouldExist) throws Exception {
---
>     @SuppressWarnings("unchecked")
>     public void testSetupMethods() throws Exception {
108,134c82
<         Path jar = new Path(ae.getOozieRuntimeDir(), ae.getLauncherJarName());
<         File fJar = new File(jar.toString());
<         fJar.delete();
<         assertFalse(fJar.exists());
<         ae.createLauncherJar();
<         assertEquals(launcherJarShouldExist, fJar.exists());
< 
<         assertEquals("map-reduce", ae.getType());
< 
<         assertEquals("map-reduce-launcher.jar", ae.getLauncherJarName());
< 
<         if (launcherJarShouldExist) {
<             List<Class> classes = new ArrayList<Class>();
<             classes.add(LauncherMapper.class);
<             classes.add(LauncherSecurityManager.class);
<             classes.add(LauncherException.class);
<             classes.add(LauncherMainException.class);
<             classes.add(PrepareActionsDriver.class);
<             classes.addAll(Services.get().get(URIHandlerService.class).getClassesForLauncher());
<             classes.add(ActionStats.class);
<             classes.add(ActionType.class);
<             classes.add(LauncherMain.class);
<             classes.add(MapReduceMain.class);
<             classes.add(PipesMain.class);
<             classes.add(StreamingMain.class);
<             assertEquals(classes, ae.getLauncherClasses());
<         }
---
>         assertEquals(Arrays.asList(StreamingMain.class), ae.getLauncherClasses());
