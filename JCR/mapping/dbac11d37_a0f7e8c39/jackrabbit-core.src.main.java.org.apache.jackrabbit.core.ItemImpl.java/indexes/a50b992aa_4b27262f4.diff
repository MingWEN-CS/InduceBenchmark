49a50
> import org.apache.jackrabbit.core.id.PropertyId;
428,432c429,432
<                     NodeType[] nta = nodeDef.getRequiredPrimaryTypes();
<                     for (int i = 0; i < nta.length; i++) {
<                         NodeTypeImpl ntReq = (NodeTypeImpl) nta[i];
<                         if (!(pnt.getQName().equals(ntReq.getQName())
<                                 || pnt.isDerivedFrom(ntReq.getQName()))) {
---
>                     for (NodeType ntReq : nodeDef.getRequiredPrimaryTypes()) {
>                         Name ntName = ((NodeTypeImpl) ntReq).getQName();
>                         if (!(pnt.getQName().equals(ntName)
>                                 || pnt.isDerivedFrom(ntName))) {
446,448c446
<                 QPropertyDefinition[] pda = ent.getMandatoryPropDefs();
<                 for (int i = 0; i < pda.length; i++) {
<                     QPropertyDefinition pd = pda[i];
---
>                 for (QPropertyDefinition pd : ent.getMandatoryPropDefs()) {
458,459c456
<                     if (!nodeState.hasPropertyName(pd.getName())) {
<                         String msg = itemMgr.safeGetJCRPath(id)
---
>                     String msg = itemMgr.safeGetJCRPath(id)
461a459
>                     if (!nodeState.hasPropertyName(pd.getName())) {
463a462,474
>                     } else {
>                         
> 
> 
> 
> 
> 
> 
>                         PropertyId pi = new PropertyId(nodeState.getNodeId(), pd.getName());
>                         ItemData childData = itemMgr.getItemData(pi, null, false);
>                         if (!childData.getDefinition().isMandatory()) {
>                             throw new ConstraintViolationException(msg);
>                         }
467,471c478,479
<                 QItemDefinition[] cnda = ent.getMandatoryNodeDefs();
<                 for (int i = 0; i < cnda.length; i++) {
<                     QItemDefinition cnd = cnda[i];
<                     if (!nodeState.hasChildNodeEntry(cnd.getName())) {
<                         String msg = itemMgr.safeGetJCRPath(id)
---
>                 for (QItemDefinition cnd : ent.getMandatoryNodeDefs()) {
>                     String msg = itemMgr.safeGetJCRPath(id)
473a482
>                     if (!nodeState.hasChildNodeEntry(cnd.getName())) {                      
475a485,501
>                     } else {
>                         
> 
> 
> 
> 
>                         boolean hasMandatoryChild = false;
>                         for (ChildNodeEntry cne : nodeState.getChildNodeEntries(cnd.getName())) {
>                             ItemData childData = itemMgr.getItemData(cne.getId(), null, false);
>                             if (childData.getDefinition().isMandatory()) {
>                                 hasMandatoryChild = true;
>                                 break;
>                             }
>                         }
>                         if (!hasMandatoryChild) {
>                             throw new ConstraintViolationException(msg);
>                         }
512c538
<                             for (int i = 0; i < values.length; i++) {
---
>                             for (InternalValue internalV : values) {
516c542
<                                     NodeId targetId = values[i].getNodeId();
---
>                                     NodeId targetId = internalV.getNodeId();
527c553
<                                     for (int j = 0; j < constraints.length; j++) {
---
>                                     for (String constrNtName : constraints) {
533,534c559
<                                         String ntName = constraints[j];
<                                         if (targetNode.isNodeType(ntName)) {
---
>                                         if (targetNode.isNodeType(constrNtName)) {
