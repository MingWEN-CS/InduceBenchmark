















package org.apache.jackrabbit.webdav.util;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.servlet.http.HttpServletRequest;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;




public class CSRFUtil {

    


    public static final String DISABLED = "disabled";

    


    private static final Logger log = LoggerFactory.getLogger(CSRFUtil.class);

    


    private final boolean disabled;

    


    private final Set<String> allowedReferrerHosts;

    





















    public CSRFUtil(String config) {
        if (config == null || config.length() == 0) {
            disabled = false;
            allowedReferrerHosts = Collections.emptySet();
        } else {
            if (DISABLED.equalsIgnoreCase(config.trim())) {
                disabled = true;
                allowedReferrerHosts = Collections.emptySet();
            } else {
                disabled = false;
                String[] allowed = config.split(",");
                allowedReferrerHosts = new HashSet<String>(allowed.length);                
                for (String entry : allowed) {
                    allowedReferrerHosts.add(entry.trim());
                }
            }
        }
    }

    public boolean isValidRequest(HttpServletRequest request) throws MalformedURLException {
        if (disabled) {
            return true;
        } else {
            String refHeader = request.getHeader("Referer");
            if (refHeader == null) {
                
                return true;
            } else {
                String host = new URL(refHeader).getHost();
                
                
                return host.equals(request.getServerName()) || allowedReferrerHosts.contains(host);
            }
        }
    }
}
