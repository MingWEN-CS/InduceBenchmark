154,160c154
<         Set<Name> mixinTypeNames = new HashSet<Name>();
<         Name name = readIndexedQName();
<         while (name != null) {
<             mixinTypeNames.add(name);
<             name = readIndexedQName();
<         }
<         bundle.setMixinTypeNames(mixinTypeNames);
---
>         readMixinTypes(bundle);
163,174c157
<         name = readIndexedQName();
<         while (name != null) {
<             PropertyId pId = new PropertyId(id, name);
<             NodePropBundle.PropertyEntry pState = readPropertyEntry(pId);
<             
<             if (!name.equals(NameConstants.JCR_PRIMARYTYPE)
<                 && !name.equals(NameConstants.JCR_MIXINTYPES)
<                 && !name.equals(NameConstants.JCR_UUID)) {
<                 bundle.addProperty(pState);
<             }
<             name = readIndexedQName();
<         }
---
>         readProperties(bundle);
194a178,229
>     private void readMixinTypes(NodePropBundle bundle) throws IOException {
>         if (version >= BundleBinding.VERSION_3) {
>             int n = readVarInt();
>             if (n == 0) {
>                 bundle.setMixinTypeNames(Collections.<Name>emptySet());
>             } else if (n == 1) {
>                 bundle.setMixinTypeNames(Collections.singleton(readName()));
>             } else {
>                 Set<Name> mixins = new HashSet<Name>(n * 2);
>                 for (int i = 0; i < n; i++) {
>                     mixins.add(readName());
>                 }
>                 bundle.setMixinTypeNames(mixins);
>             }
>         } else {
>             Name name = readIndexedQName();
>             if (name == null) {
>                 bundle.setMixinTypeNames(Collections.<Name>emptySet());
>             } else {
>                 Set<Name> mixinTypeNames = new HashSet<Name>();
>                 do {
>                     mixinTypeNames.add(name);
>                     name = readIndexedQName();
>                 } while (name != null);
>                 bundle.setMixinTypeNames(mixinTypeNames);
>             }
>         }
>     }
> 
>     private void readProperties(NodePropBundle bundle) throws IOException {
>         if (version >= BundleBinding.VERSION_3) {
>             int n = readVarInt();
>             for (int i = 0; i < n; i++) {
>                 PropertyId id = new PropertyId(bundle.getId(), readName());
>                 bundle.addProperty(readPropertyEntry(id));
>             }
>         } else {
>             Name name = readIndexedQName();
>             while (name != null) {
>                 PropertyId pId = new PropertyId(bundle.getId(), name);
>                 NodePropBundle.PropertyEntry pState = readPropertyEntry(pId);
>                 
>                 if (!name.equals(NameConstants.JCR_PRIMARYTYPE)
>                         && !name.equals(NameConstants.JCR_MIXINTYPES)
>                         && !name.equals(NameConstants.JCR_UUID)) {
>                     bundle.addProperty(pState);
>                 }
>                 name = readIndexedQName();
>             }
>         }
>     }
> 
