967c967
<   public static class IntegerRanges {
---
>   public static class IntegerRanges implements Iterable<Integer>{
971a972,1017
>     
>     private static class RangeNumberIterator implements Iterator<Integer> {
>       Iterator<Range> internal;
>       int at;
>       int end;
> 
>       public RangeNumberIterator(List<Range> ranges) {
>         if (ranges != null) {
>           internal = ranges.iterator();
>         }
>         at = -1;
>         end = -2;
>       }
>       
>       @Override
>       public boolean hasNext() {
>         if (at <= end) {
>           return true;
>         } else if (internal != null){
>           return internal.hasNext();
>         }
>         return false;
>       }
> 
>       @Override
>       public Integer next() {
>         if (at <= end) {
>           at++;
>           return at - 1;
>         } else if (internal != null){
>           Range found = internal.next();
>           if (found != null) {
>             at = found.start;
>             end = found.end;
>             at++;
>             return at - 1;
>           }
>         }
>         return null;
>       }
> 
>       @Override
>       public void remove() {
>         throw new UnsupportedOperationException();
>       }
>     };
1029a1076,1082
>     
> 
> 
>     public boolean isEmpty() {
>       return ranges == null || ranges.isEmpty();
>     }
>     
1045a1099,1104
> 
>     @Override
>     public Iterator<Integer> iterator() {
>       return new RangeNumberIterator(ranges);
>     }
>     
