
















package org.apache.hadoop.fs.viewfs;

import java.io.IOException;
import java.net.URISyntaxException;

import javax.security.auth.login.LoginException;

import org.apache.hadoop.fs.FileContext;
import org.apache.hadoop.fs.FileContextTestHelper;
import org.apache.hadoop.fs.FileStatus;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.fs.RemoteIterator;
import org.apache.hadoop.hdfs.DFSConfigKeys;
import org.apache.hadoop.hdfs.HdfsConfiguration;
import org.apache.hadoop.hdfs.MiniDFSCluster;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;





public class TestViewFsAtHdfsRoot extends ViewFsBaseTest {
  
  private static MiniDFSCluster cluster;
  private static HdfsConfiguration CONF = new HdfsConfiguration();
  private static FileContext fc;
  
  @Override
  protected FileContextTestHelper createFileContextHelper() {
    return new FileContextTestHelper("/tmp/TestViewFsAtHdfsRoot");
  }

  @BeforeClass
  public static void clusterSetupAtBegining() throws IOException,
      LoginException, URISyntaxException {
    SupportsBlocks = true;
    CONF.setBoolean(
        DFSConfigKeys.DFS_NAMENODE_DELEGATION_TOKEN_ALWAYS_USE_KEY, true);

    cluster = new MiniDFSCluster.Builder(CONF).numDataNodes(2).build();
    cluster.waitClusterUp();
    fc = FileContext.getFileContext(cluster.getURI(0), CONF);
  }

      
  @AfterClass
  public static void ClusterShutdownAtEnd() throws Exception {
    cluster.shutdown();   
  }

  @Override
  @Before
  public void setUp() throws Exception {
    
    fcTarget = fc;
    super.setUp();    
  }
  
  




  @Override
  void initializeTargetTestRoot() throws IOException {
    targetTestRoot = fc.makeQualified(new Path("/"));
    RemoteIterator<FileStatus> dirContents = fc.listStatus(targetTestRoot);
    while (dirContents.hasNext()) {
      fc.delete(dirContents.next().getPath(), true);
    }
  }
  
  



  @Override
  int getExpectedDelegationTokenCount() {
    return 8;
  }
}
