22d21
< import java.util.concurrent.Executors;
139a139,181
>   @Test
>   public void testPeekElements() throws Exception {
>     String dqZNode = "/distqueue/test";
>     byte[] data = "hello world".getBytes(UTF8);
> 
>     DistributedQueue dq = makeDistributedQueue(dqZNode);
> 
>     
>     dq.offer(data);
>     dq.offer(data);
>     dq.offer(data);
> 
>     
>     for (int i = 0; i <= 3; ++i) {
>       assertEquals(i, dq.peekElements(i, 0, child -> true).size());
>     }
> 
>     
>     assertEquals(3, dq.peekElements(4, 0, child -> true).size());
> 
>     
>     long start = System.nanoTime();
>     assertEquals(0, dq.peekElements(4, 1000, child -> false).size());
>     assertTrue(System.nanoTime() - start >= TimeUnit.MILLISECONDS.toNanos(500));
> 
>     
>     executor.submit(() -> {
>       try {
>         Thread.sleep(500);
>         dq.offer(data);
>       } catch (Exception e) {
>         
>       }
>     });
>     start = System.nanoTime();
>     assertEquals(1, dq.peekElements(4, 2000, child -> {
>       
>       return child.endsWith("3");
>     }).size());
>     assertTrue(System.nanoTime() - start < TimeUnit.MILLISECONDS.toNanos(1000));
>     assertTrue(System.nanoTime() - start >= TimeUnit.MILLISECONDS.toNanos(250));
>   }
> 
