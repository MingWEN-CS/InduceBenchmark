37,38c37
< import org.apache.lucene.index.DocsAndPositionsEnum;
< import org.apache.lucene.index.DocsEnum;
---
> import org.apache.lucene.index.PostingsEnum;
986,996c985,987
<       public DocsEnum docs(Bits liveDocs, DocsEnum reuse, int flags) {
<         if (reuse == null || !(reuse instanceof MemoryDocsEnum)) {
<           reuse = new MemoryDocsEnum();
<         }
<         return ((MemoryDocsEnum) reuse).reset(liveDocs, info.sliceArray.freq[info.sortedTerms[termUpto]]);
<       }
< 
<       @Override
<       public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, int flags) {
<         if (reuse == null || !(reuse instanceof MemoryDocsAndPositionsEnum)) {
<           reuse = new MemoryDocsAndPositionsEnum();
---
>       public PostingsEnum postings(Bits liveDocs, PostingsEnum reuse, int flags) {
>         if (reuse == null || !(reuse instanceof MemoryPostingsEnum)) {
>           reuse = new MemoryPostingsEnum();
999c990
<         return ((MemoryDocsAndPositionsEnum) reuse).reset(liveDocs, info.sliceArray.start[ord], info.sliceArray.end[ord], info.sliceArray.freq[ord]);
---
>         return ((MemoryPostingsEnum) reuse).reset(liveDocs, info.sliceArray.start[ord], info.sliceArray.end[ord], info.sliceArray.freq[ord]);
1016,1048c1007
<     private class MemoryDocsEnum extends DocsEnum {
<       private boolean hasNext;
<       private Bits liveDocs;
<       private int doc = -1;
<       private int freq;
< 
<       public DocsEnum reset(Bits liveDocs, int freq) {
<         this.liveDocs = liveDocs;
<         hasNext = true;
<         doc = -1;
<         this.freq = freq;
<         return this;
<       }
< 
<       @Override
<       public int docID() {
<         return doc;
<       }
< 
<       @Override
<       public int nextDoc() {
<         if (hasNext && (liveDocs == null || liveDocs.get(0))) {
<           hasNext = false;
<           return doc = 0;
<         } else {
<           return doc = NO_MORE_DOCS;
<         }
<       }
< 
<       @Override
<       public int advance(int target) throws IOException {
<         return slowAdvance(target);
<       }
---
>     private class MemoryPostingsEnum extends PostingsEnum {
1050,1061d1008
<       @Override
<       public int freq() throws IOException {
<         return freq;
<       }
< 
<       @Override
<       public long cost() {
<         return 1;
<       }
<     }
<     
<     private class MemoryDocsAndPositionsEnum extends DocsAndPositionsEnum {
1067a1015
>       private int pos;
1073c1021
<       public MemoryDocsAndPositionsEnum() {
---
>       public MemoryPostingsEnum() {
1078c1026
<       public DocsAndPositionsEnum reset(Bits liveDocs, int start, int end, int freq) {
---
>       public PostingsEnum reset(Bits liveDocs, int start, int end, int freq) {
1095a1044
>         pos = -1;
1116c1065,1066
<         assert posUpto++ < freq;
---
>         posUpto++;
>         assert posUpto <= freq;
1119a1070
>           
