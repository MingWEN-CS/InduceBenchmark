93,96c93,108
<   private static boolean isEqual(Object o1, Object o2) {
<     if (o1==o2) return true;  
<     if (o1==null || o2==null) return false;
<     return o1.equals(o2);
---
>   
>   
>   
>   
>   
>   private static boolean isEqual(List<Query> fqList1, List<Query> fqList2) {
>     if (fqList1 == fqList2) return true;  
>     if (fqList1 == null || fqList2 == null) return false;
>     int sz = fqList1.size();
>     if (sz != fqList2.size()) return false;
>     for (int i = 0; i < sz; i++) {
>       if (!fqList1.get(i).equals(fqList2.get(i))) {
>         return unorderedCompare(fqList1, fqList2, i);
>       }
>     }
>     return true;
97a110,124
> 
>   private static boolean unorderedCompare(List<Query> fqList1, List<Query> fqList2, int start) {
>     int sz = fqList1.size();
>     outer:
>     for (int i = start; i < sz; i++) {
>       Query q1 = fqList1.get(i);
>       for (int j = start; j < sz; j++) {
>         if (q1.equals(fqList2.get(j)))
>           continue outer;
>       }
>       return false;
>     }
>     return true;
>   }
> 
