
















package org.apache.solr.core;

import java.util.ArrayList;
import java.util.List;

import org.apache.lucene.index.Term;
import org.apache.lucene.search.BooleanClause.Occur;
import org.apache.lucene.search.BooleanQuery;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.Sort;
import org.apache.lucene.search.SortField;
import org.apache.lucene.search.TermQuery;
import org.apache.solr.SolrTestCaseJ4;
import org.apache.solr.search.QueryResultKey;
import org.junit.Test;

public class QueryResultKeyTest extends SolrTestCaseJ4 {

  @Test
  public void testFiltersHashCode() {
    
    
    
    Sort sort = new Sort(new SortField("test", SortField.Type.INT));
    List<Query> filters = new ArrayList<Query>();
    filters.add(new TermQuery(new Term("test", "field")));
    filters.add(new TermQuery(new Term("test2", "field2")));
    
    BooleanQuery query = new BooleanQuery();
    query.add(new TermQuery(new Term("test", "field")), Occur.MUST);
    
    QueryResultKey qrk1 = new QueryResultKey(query , filters, sort, 1);
    
    List<Query> filters2 = new ArrayList<Query>();
    filters2.add(new TermQuery(new Term("test2", "field2")));
    filters2.add(new TermQuery(new Term("test", "field")));
    QueryResultKey qrk2 = new QueryResultKey(query , filters2, sort, 1);
    
    assertEquals(qrk1.hashCode(), qrk2.hashCode());
  }

}
