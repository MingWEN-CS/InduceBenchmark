250c250
<           methodName = "addIndexesNoOptimize(Directory[])";
---
>           methodName = "addIndexes(Directory[])";
310c310
<                 writer.addIndexesNoOptimize(dirs);
---
>                 writer.addIndexes(dirs);
325c325
<                 writer.addIndexesNoOptimize(dirs);
---
>                 writer.addIndexes(dirs);
2735c2735
<       writer.addIndexesNoOptimize(indexDirs);
---
>       writer.addIndexes(indexDirs);
3598d3597
<     final ConcurrentMergeScheduler cms;
3613d3611
<       cms = (ConcurrentMergeScheduler) writer2.getConfig().getMergeScheduler();
3686c3684
<       switch(j%4) {
---
>       switch(j%5) {
3688c3686
<         writer2.addIndexesNoOptimize(dirs);
---
>         writer2.addIndexes(dirs);
3692c3690
<         writer2.addIndexesNoOptimize(dirs);
---
>         writer2.addIndexes(dirs);
3697a3696,3699
>         writer2.addIndexes(dirs);
>         writer2.maybeMerge();
>         break;
>       case 4:
3707c3709
<     final int NUM_ITER = 12;
---
>     final int NUM_ITER = 15;
3717c3719,3720
<     assertEquals(100+NUM_COPY*(3*NUM_ITER/4)*RunAddIndexesThreads.NUM_THREADS*RunAddIndexesThreads.NUM_INIT_DOCS, c.writer2.numDocs());
---
>     int expectedNumDocs = 100+NUM_COPY*(4*NUM_ITER/5)*RunAddIndexesThreads.NUM_THREADS*RunAddIndexesThreads.NUM_INIT_DOCS;
>     assertEquals(expectedNumDocs, c.writer2.numDocs());
3726c3729
<     assertEquals(100+NUM_COPY*(3*NUM_ITER/4)*RunAddIndexesThreads.NUM_THREADS*RunAddIndexesThreads.NUM_INIT_DOCS, reader.numDocs());
---
>     assertEquals(expectedNumDocs, reader.numDocs());
3777c3780
<         writer2.addIndexesNoOptimize(dirs);
---
>         writer2.addIndexes(dirs);
3781c3784
<         writer2.addIndexesNoOptimize(dirs);
---
>         writer2.addIndexes(dirs);
