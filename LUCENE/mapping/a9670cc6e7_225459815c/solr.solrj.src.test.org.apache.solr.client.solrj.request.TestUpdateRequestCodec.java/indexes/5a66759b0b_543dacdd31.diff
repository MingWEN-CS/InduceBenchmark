20a21,23
> import java.io.File;
> import java.io.FileInputStream;
> import java.io.FileOutputStream;
33a37
> import org.apache.solr.util.ExternalPaths;
162a167,235
>   public void testBackCompat4_5() throws IOException {
> 
>     UpdateRequest updateRequest = new UpdateRequest();
>     updateRequest.deleteById("*:*");
>     updateRequest.deleteById("id:5");
>     updateRequest.deleteByQuery("2*");
>     updateRequest.deleteByQuery("1*");
>     updateRequest.setParam("a", "b");
>     SolrInputDocument doc = new SolrInputDocument();
>     doc.addField("id", 1);
>     doc.addField("desc", "one", 2.0f);
>     doc.addField("desc", "1");
>     updateRequest.add(doc);
> 
>     doc = new SolrInputDocument();
>     doc.addField("id", 2);
>     doc.setDocumentBoost(10.0f);
>     doc.addField("desc", "two", 3.0f);
>     doc.addField("desc", "2");
>     updateRequest.add(doc);
> 
>     doc = new SolrInputDocument();
>     doc.addField("id", 3);
>     doc.addField("desc", "three", 3.0f);
>     doc.addField("desc", "3");
>     updateRequest.add(doc);
> 
>     doc = new SolrInputDocument();
>     Collection<String> foobar = new HashSet<String>();
>     foobar.add("baz1");
>     foobar.add("baz2");
>     doc.addField("foobar",foobar);
>     updateRequest.add(doc);
> 
>     updateRequest.deleteById("2");
>     updateRequest.deleteByQuery("id:3");
> 
> 
> 
>     FileInputStream is = new FileInputStream(new File(ExternalPaths.SOURCE_HOME, "solrj/src/test-files/solrj/updateReq_4_5.bin"));
>     UpdateRequest updateUnmarshalled = new JavaBinUpdateRequestCodec().unmarshal(is, new JavaBinUpdateRequestCodec.StreamingUpdateHandler() {
>       @Override
>       public void update(SolrInputDocument document, UpdateRequest req, Integer commitWithin, Boolean override) {
>         if(commitWithin == null ){
>                     req.add(document);
>         }
>         System.err.println("Doc" + document + " ,commitWithin:"+commitWithin+ " , override:"+ override);
>       }
>     });
> 
>     System.err.println(updateUnmarshalled.getDocumentsMap());
>     System.err.println(updateUnmarshalled.getDocuments());
> 
>     for (int i = 0; i < updateRequest.getDocuments().size(); i++) {
>       SolrInputDocument inDoc = updateRequest.getDocuments().get(i);
>       SolrInputDocument outDoc = updateUnmarshalled.getDocuments().get(i);
>       compareDocs("doc#"+i, inDoc, outDoc);
>     }
>     Assert.assertEquals(updateUnmarshalled.getDeleteById().get(0) ,
>         updateRequest.getDeleteById().get(0));
>     Assert.assertEquals(updateUnmarshalled.getDeleteQuery().get(0) ,
>         updateRequest.getDeleteQuery().get(0));
> 
>     assertEquals("b", updateUnmarshalled.getParams().get("a"));
>     is.close();
>   }
> 
> 
> 
