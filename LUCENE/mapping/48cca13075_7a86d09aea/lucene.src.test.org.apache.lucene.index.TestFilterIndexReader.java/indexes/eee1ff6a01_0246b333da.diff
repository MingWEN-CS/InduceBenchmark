29a30,31
> import org.apache.lucene.util.BytesRef;
> import org.apache.lucene.util.Bits;
37,40c39,74
<      
<     private static class TestTermEnum extends FilterTermEnum {
<       public TestTermEnum(TermEnum termEnum) {
<         super(termEnum);
---
>     
>     private static class TestFields extends FilterFields {
>       TestFields(Fields in) {
>         super(in);
>       }
>       public FieldsEnum iterator() throws IOException {
>         return new TestFieldsEnum(super.iterator());
>       }
>       public Terms terms(String field) throws IOException {
>         return new TestTerms(super.terms(field));
>       }
>     }
> 
>     private static class TestTerms extends FilterTerms {
>       TestTerms(Terms in) {
>         super(in);
>       }
> 
>       public TermsEnum iterator() throws IOException {
>         return new TestTermsEnum(super.iterator());
>       }
>     }
> 
>     private static class TestFieldsEnum extends FilterFieldsEnum {
>       TestFieldsEnum(FieldsEnum in) {
>         super(in);
>       }
> 
>       public TermsEnum terms() throws IOException {
>         return new TestTermsEnum(super.terms());
>       }
>     }
> 
>     private static class TestTermsEnum extends FilterTermsEnum {
>       public TestTermsEnum(TermsEnum in) {
>         super(in);
45,48c79,83
<       public boolean next() throws IOException {
<         while (in.next()) {
<           if (in.term().text().indexOf('e') != -1)
<             return true;
---
>       public BytesRef next() throws IOException {
>         BytesRef text;
>         while ((text = in.next()) != null) {
>           if (text.utf8ToString().indexOf('e') != -1)
>             return text;
50c85,90
<         return false;
---
>         return null;
>       }
> 
>       @Override
>       public DocsAndPositionsEnum docsAndPositions(Bits skipDocs, DocsAndPositionsEnum reuse) throws IOException {
>         return new TestPositions(super.docsAndPositions(skipDocs, reuse == null ? null : ((FilterDocsAndPositionsEnum) reuse).in));
52a93
> 
54,56c95,96
<     
<     private static class TestTermPositions extends FilterTermPositions {
<       public TestTermPositions(TermPositions in) {
---
>     private static class TestPositions extends FilterDocsAndPositionsEnum {
>       public TestPositions(DocsAndPositionsEnum in) {
62,65c102,106
<       public boolean next() throws IOException {
<         while (in.next()) {
<           if ((in.doc() % 2) == 1)
<             return true;
---
>       public int nextDoc() throws IOException {
>         int doc;
>         while ((doc = in.nextDoc()) != NO_MORE_DOCS) {
>           if ((doc % 2) == 1)
>             return doc;
67c108
<         return false;
---
>         return NO_MORE_DOCS;
75,81d115
<     
<     @Override
<     public TermEnum terms() throws IOException {
<       return new TestTermEnum(in.terms());
<     }
< 
<     
83,84c117,118
<     public TermPositions termPositions() throws IOException {
<       return new TestTermPositions(in.termPositions());
---
>     public Fields fields() throws IOException {
>       return new TestFields(super.fields());
