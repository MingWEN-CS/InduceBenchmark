236c236
< 
---
>   
245,280c245,247
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
<   private CloudSolrClient(Collection<String> zkHosts,
<                           String chroot,
<                           List<String> solrUrls,
<                           HttpClient httpClient,
<                           LBHttpSolrClient lbSolrClient,
<                           LBHttpSolrClient.Builder lbHttpSolrClientBuilder,
<                           boolean updatesToLeaders,
<                           boolean directUpdatesToLeadersOnly,
<                           ClusterStateProvider stateProvider
< 
<   ) {
<     if (stateProvider == null) {
<       if (zkHosts != null && solrUrls != null) {
---
>   protected CloudSolrClient(Builder builder) {
>     if (builder.stateProvider == null) {
>       if (builder.zkHosts != null && builder.solrUrls != null) {
283,285c250,252
<       if (zkHosts != null) {
<         this.stateProvider = new ZkClientClusterStateProvider(zkHosts, chroot);
<       } else if (solrUrls != null && !solrUrls.isEmpty()) {
---
>       if (builder.zkHosts != null) {
>         this.stateProvider = new ZkClientClusterStateProvider(builder.zkHosts, builder.zkChroot);
>       } else if (builder.solrUrls != null && !builder.solrUrls.isEmpty()) {
287c254
<           this.stateProvider = new HttpClusterStateProvider(solrUrls, httpClient);
---
>           this.stateProvider = new HttpClusterStateProvider(builder.solrUrls, builder.httpClient);
290c257
<               + "Solr server(s), "  + solrUrls + ", down?)", e);
---
>               + "Solr server(s), "  + builder.solrUrls + ", down?)", e);
296c263
<       this.stateProvider = stateProvider;
---
>       this.stateProvider = builder.stateProvider;
298,306c265,273
<     this.clientIsInternal = httpClient == null;
<     this.shutdownLBHttpSolrServer = lbSolrClient == null;
<     if(lbHttpSolrClientBuilder != null) lbSolrClient = lbHttpSolrClientBuilder.build();
<     if(lbSolrClient != null) httpClient = lbSolrClient.getHttpClient();
<     this.myClient = httpClient == null ? HttpClientUtil.createClient(null) : httpClient;
<     if (lbSolrClient == null) lbSolrClient = createLBHttpSolrClient(myClient);
<     this.lbClient = lbSolrClient;
<     this.updatesToLeaders = updatesToLeaders;
<     this.directUpdatesToLeadersOnly = directUpdatesToLeadersOnly;
---
>     this.clientIsInternal = builder.httpClient == null;
>     this.shutdownLBHttpSolrServer = builder.loadBalancedSolrClient == null;
>     if(builder.lbClientBuilder != null) builder.loadBalancedSolrClient = builder.lbClientBuilder.build();
>     if(builder.loadBalancedSolrClient != null) builder.httpClient = builder.loadBalancedSolrClient.getHttpClient();
>     this.myClient = (builder.httpClient == null) ? HttpClientUtil.createClient(null) : builder.httpClient;
>     if (builder.loadBalancedSolrClient == null) builder.loadBalancedSolrClient = createLBHttpSolrClient(myClient);
>     this.lbClient = builder.loadBalancedSolrClient;
>     this.updatesToLeaders = builder.shardLeadersOnly;
>     this.directUpdatesToLeadersOnly = builder.directUpdatesToLeadersOnly;
1375,1383c1342,1350
<     private Collection<String> zkHosts;
<     private List<String> solrUrls;
<     private HttpClient httpClient;
<     private String zkChroot;
<     private LBHttpSolrClient loadBalancedSolrClient;
<     private LBHttpSolrClient.Builder lbClientBuilder;
<     private boolean shardLeadersOnly;
<     private boolean directUpdatesToLeadersOnly;
<     private ClusterStateProvider stateProvider;
---
>     protected Collection<String> zkHosts;
>     protected List<String> solrUrls;
>     protected HttpClient httpClient;
>     protected String zkChroot;
>     protected LBHttpSolrClient loadBalancedSolrClient;
>     protected LBHttpSolrClient.Builder lbClientBuilder;
>     protected boolean shardLeadersOnly;
>     protected boolean directUpdatesToLeadersOnly;
>     protected ClusterStateProvider stateProvider;
1539,1540c1506
<       return new CloudSolrClient(zkHosts, zkChroot, solrUrls, httpClient, loadBalancedSolrClient, lbClientBuilder,
<           shardLeadersOnly, directUpdatesToLeadersOnly, stateProvider);
---
>       return new CloudSolrClient(this);
